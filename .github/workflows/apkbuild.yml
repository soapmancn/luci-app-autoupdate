name: APKBUILD Package

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Build APK package in Alpine
        uses: addnab/docker-run-action@v3
        with:
          image: alpine:edge
          options: -v ${{ github.workspace }}:/workspace
          run: |
            # 添加必要的仓库
            echo "https://dl-cdn.alpinelinux.org/alpine/edge/main" > /etc/apk/repositories
            echo "https://dl-cdn.alpinelinux.org/alpine/edge/community" >> /etc/apk/repositories
            echo "https://dl-cdn.alpinelinux.org/alpine/edge/testing" >> /etc/apk/repositories
            
            # 更新系统并安装基础包
            apk update
            apk add alpine-sdk build-base fakeroot sudo git
            
            # 创建构建用户
            adduser -D builder
            echo "builder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
            addgroup builder abuild
            
            # 设置构建环境
            mkdir -p /var/cache/distfiles
            chown builder:abuild /var/cache/distfiles
            chown -R builder:abuild /workspace
            
            # 构建过程
            su builder -c "
              cd /workspace
              git config --global --unset http.https://github.com/.extraheader || true
              export PACKAGER='GitHub Actions <github@actions>'
              abuild-keygen -a -i -n
              abuild checksum
              abuild -r
            "
            
            # 复制构建结果
            mkdir -p /workspace/packages
            find /home/builder/packages -name '*.apk' -exec cp {} /workspace/packages/ \; || true

      - name: Generate Tag
        run: |
          echo "BUILD_DATE=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          git tag v$BUILD_DATE
          git push origin v$BUILD_DATE

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.env.BUILD_DATE }}
          files: |
            packages/luci-app-autoupdate*.apk
          name: Release v${{ github.env.BUILD_DATE }}
          draft: false
          prerelease: false
