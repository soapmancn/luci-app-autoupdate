#!/usr/bin/ucode
'use strict';

import 'fs';

const methods = {
	seturl: {
		args: { type: 'type' },
		call: function(req) {
			if (req.args?.type !== 'url')
				return { error: 'illegal type' };

			const uci = require('uci');
			uci.load('autoupdate');
			uci.set('autoupdate', 'settings', 'url', req.args?.content);
			uci.commit('autoupdate');
				
			return { result: true };
		}
	},
	
	download: {
		call: function() {
			const uci = require('uci');
			const process = require('process');
			
			uci.load('autoupdate');
			let url = uci.get('autoupdate', 'main', 'url');
			if (!url || url == '')
				return { result: false, error: '未配置固件地址' };
				
			console.log('开始下载固件: ' + url);
			let code = process.run('/usr/bin/wget', [ '-O', '/tmp/firmware.bin', url ]);
			console.log('下载完成，状态码: ' + code);
			return { result: (code == 0) };
		}
	},
	
	upgrade: {
		call: function() {
			const process = require('process');
			
			// 异步执行升级
			console.log('开始升级系统');
			process.fork('/sbin/sysupgrade', [ '-c', '/tmp/firmware.bin' ]);
			return { result: true };
		}
	}
};

return { 'luci.autoupdate':methods };
